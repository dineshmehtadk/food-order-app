{"ast":null,"code":"var _jsxFileName = \"/Users/dkmehta/Desktop/foodorder-app-usereducer/src/Store/CartProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./Cart-Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (action, state) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const newTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: newTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const AddCartItem = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const RemoveCartItem = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const CartItemProvider = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: AddCartItem,\n    removeItem: RemoveCartItem\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: CartItemProvider,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/dkmehta/Desktop/foodorder-app-usereducer/src/Store/CartProvider.jsx"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","action","state","type","updatedItems","concat","item","newTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","AddCartItem","RemoveCartItem","id","CartItemProvider","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AAACC,EAAAA,KAAK,EAAC,EAAP;AAAUC,EAAAA,WAAW,EAAC;AAAtB,CAAzB;;AACA,MAAMC,WAAW,GAAG,CAACC,MAAD,EAASC,KAAT,KAAkB;AAClC,MAAGD,MAAM,CAACE,IAAP,KAAgB,KAAnB,EAAyB;AAErB,UAAMC,YAAY,GAAGF,KAAK,CAACJ,KAAN,CAAYO,MAAZ,CAAmBJ,MAAM,CAACK,IAA1B,CAArB;AACA,UAAMC,cAAc,GAAGL,KAAK,CAACH,WAAN,GAAqBE,MAAM,CAACK,IAAP,CAAYE,KAAZ,GAAoBP,MAAM,CAACK,IAAP,CAAYG,MAA5E;AACA,WAAM;AACFX,MAAAA,KAAK,EAACM,YADJ;AACkBL,MAAAA,WAAW,EAACQ;AAD9B,KAAN;AAGH;;AACD,SAAOV,gBAAP;AACH,CAVD;;AAYA,MAAMa,YAAY,GAAGC,KAAK,IAAG;AAAA;;AAEzB,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkClB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AACA,QAAMiB,WAAW,GAAIR,IAAD,IAAQ;AACxBO,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAC,KAAN;AAAYG,MAAAA,IAAI,EAACA;AAAjB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMS,cAAc,GAAIC,EAAD,IAAO;AAC1BH,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAC,QAAN;AAAea,MAAAA,EAAE,EAACA;AAAlB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAG;AACrBnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADI;AAErBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFF;AAGrBmB,IAAAA,OAAO,EAAEJ,WAHY;AAIrBK,IAAAA,UAAU,EAAEJ;AAJS,GAAzB;AASA,sBAAQ,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,gBAA7B;AAAA,cAAgDN,KAAK,CAACS;AAAtD;AAAA;AAAA;AAAA;AAAA,UAAR;AACH,CApBD;;GAAMV,Y;;KAAAA,Y;AAsBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\nimport CartContext from \"./Cart-Context\";\n\nconst defaultCartState = {items:[],totalAmount:0}\nconst cartReducer = (action, state) =>{\n    if(action.type === 'ADD'){\n       \n        const updatedItems = state.items.concat(action.item);\n        const newTotalAmount = state.totalAmount  + action.item.price * action.item.amount;\n        return{\n            items:updatedItems, totalAmount:newTotalAmount\n        }\n    }\n    return defaultCartState;\n};\n\nconst CartProvider = props =>{\n\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n    const AddCartItem = (item)=>{\n        dispatchCartAction({type:'ADD',item:item});\n    };\n    const RemoveCartItem = (id) =>{\n        dispatchCartAction({type:'REMOVE',id:id});\n    };\n\n    const CartItemProvider = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: AddCartItem,\n        removeItem: RemoveCartItem\n    }\n\n\n\n    return( <CartContext.Provider value={CartItemProvider}>{props.children}</CartContext.Provider>);\n};\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}