{"ast":null,"code":"var _jsxFileName = \"/Users/dkmehta/Desktop/foodorder-app-usereducer/src/Store/CartProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./Cart-Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const newTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existCartItem = state.items[existCartItemIndex];\n    let updatedItems;\n\n    if (existCartItem) {\n      const updatedItem = { ...existCartItem,\n        amount: existCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: newTotalAmount\n    };\n  }\n\n  if (action.item === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const newTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id === action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: newTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const AddCartItem = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const RemoveCartItem = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const CartItemProvider = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: AddCartItem,\n    removeItem: RemoveCartItem\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: CartItemProvider,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/dkmehta/Desktop/foodorder-app-usereducer/src/Store/CartProvider.jsx"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","newTotalAmount","item","price","amount","existCartItemIndex","findIndex","id","existCartItem","updatedItems","updatedItem","concat","existingCartItemIndex","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","AddCartItem","RemoveCartItem","CartItemProvider","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\nimport CartContext from \"./Cart-Context\";\n\nconst defaultCartState = {items:[],totalAmount:0}\nconst cartReducer = (state, action) =>{\n    if(action.type === 'ADD'){\n     \n        const newTotalAmount = state.totalAmount  + action.item.price * action.item.amount;\n\n        const existCartItemIndex = state.items.findIndex(\n            (item) => item.id === action.id\n        );\n        const existCartItem = state.items[existCartItemIndex];\n        let updatedItems;\n        if (existCartItem){\n            const updatedItem ={\n                ...existCartItem, amount:existCartItem.amount + action.item.amount,\n            }\n            updatedItems = [...state.items];\n            updatedItems[existCartItemIndex] = updatedItem;\n        }\n        else{\n            updatedItems = state.items.concat(action.item);\n        }\n\n        return{\n            items: updatedItems,\n            totalAmount: newTotalAmount\n        };\n    }\n    if(action.item ==='REMOVE'){\n        const existingCartItemIndex = state.items.findIndex(\n            (item)=> item.id=== action.id\n        );\n        const existingItem = state.items[existingCartItemIndex];\n        const newTotalAmount =state.totalAmount - existingItem.price;\n        let updatedItems;\n        if(existingItem.amount ===1){\n            updatedItems = state.items.filter(item => item.id === action.id)\n        }\n        else{\n            const updatedItem= {...existingItem, amount:existingItem.amount -1}\n            updatedItems = [...state.items];\n            updatedItems[existingCartItemIndex] = updatedItem;\n        }\n        return{\n            items: updatedItems,\n            totalAmount : newTotalAmount,\n        }\n    }\n    return defaultCartState;\n}\n\nconst CartProvider = props =>{\n\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n    const AddCartItem = (item)=>{\n        dispatchCartAction({type:'ADD',item:item});\n    };\n    const RemoveCartItem = (id) =>{\n        dispatchCartAction({type:'REMOVE',id:id});\n    };\n\n    const CartItemProvider = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: AddCartItem,\n        removeItem: RemoveCartItem\n    }\n\n\n\n    return( <CartContext.Provider value={CartItemProvider}>{props.children}</CartContext.Provider>);\n};\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}